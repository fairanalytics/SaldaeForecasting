crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
sekned_clust_crosstalk(ds_object =ts_clust_mds,target_variables= head(colnames(tsclust_results$tisefka_origin)),tisefka_origin = tsclust_results$tisefka_origin )
)
p_clust2
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
sekned_clust_crosstalk(ds_object =ts_clust_mds,target_variables= head(colnames(tsclust_results$tisefka_origin)),tisefka_origin = tsclust_results$tisefka_origin )
)
sekned_clust_crosstalk <- function(ds_object = NULL,target_variables= NULL,tisefka_origin=NULL){
tasarut <<- ds_object$key()
print(paste("tasarut:",tasarut))
p_clust <- ggplot2::ggplot(data = tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date),aes(x=date,y=value,group=ts_name,colour=ts_name)) + geom_line()
p_clust <- p_clust+ggplot2::theme(legend.position="bottom")
p_clust2<<-p_clust
return(NULL)
}
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
sekned_clust_crosstalk(ds_object =ts_clust_mds,target_variables= head(colnames(tsclust_results$tisefka_origin)),tisefka_origin = tsclust_results$tisefka_origin )
)
tasarut
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
sekned_clust_crosstalk(ds_object =ts_clust_mds,target_variables= ~ts_names,tisefka_origin = tsclust_results$tisefka_origin )
)
tasarut
tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
plot_ly(x=~date, y=~value, group=~ts_name,
type="scatter",color=~ts_name, mode="lines+markers")
tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=~ts_name,
type="scatter",color=~ts_name, mode="lines+markers")
target_variables[-length(target_variables)]<-NULL
target_variables[-length(target_variables)]
target_variables <- target_variables[-length(target_variables)]
tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=~ts_name,
type="scatter",color=~ts_name, mode="lines+markers")
sekned_clust_crosstalk <- function(ds_object = NULL,target_variables= NULL,tisefka_origin=NULL){
print(paste("tasarut:",tasarut))
p_clust <- ggplot2::ggplot(data = ,aes(x=,y=,group=ts_name,colour=))
p_clust<-tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=~ts_name,
type="scatter",color=~ts_name, mode="lines+markers")
return(p_clust)
}
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
sekned_clust_crosstalk(ds_object =ts_clust_mds,target_variables= ~ts_names,tisefka_origin = tsclust_results$tisefka_origin )
)
sekned_clust_crosstalk <- function(ds_object = NULL,target_variables= NULL,tisefka_origin=NULL){
print(paste("tasarut:",tasarut))
p_clust<-tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=~ts_name,
type="scatter",color=~ts_name, mode="lines+markers")
return(p_clust)
}
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
sekned_clust_crosstalk(ds_object =ts_clust_mds,target_variables= ~ts_names,tisefka_origin = tsclust_results$tisefka_origin )
)
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
tsclust_results$tisefka_origin%>%plotly::plot_ly(x=~date, y=~value, group=~ts_clust_mds$key(),
type="scatter",color=~ts_name, mode="lines+markers")
)
tsclust_results$tisefka_origin
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
tsclust_results$tisefka_origin%>%plotly::plot_ly(x=~date, y=~value, group=ts_clust_mds$key(),
type="scatter", mode="lines+markers")
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
tisefka_origin[,c("date",target_variables)] %>% tidyr::gather("ts_name","value" ,-date)%>%
tsclust_results$tisefka_origin%>%plotly::plot_ly(x=~date, y=~value, group=ts_clust_mds$key(),
type="scatter", mode="lines+markers")
)
ts_clust_mds$key()
tsclust_results$tisefka_origin%>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=head(ts_clust_mds$key()),
type="scatter", mode="lines+markers")
head(ts_clust_mds$key())
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
tsclust_results$tisefka_origin%>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=head(ts_clust_mds$key()),
type="scatter", mode="lines+markers")
)
plotly::plot_ly(x=~date, y=~value, group=head(ts_clust_mds$key()),
type="scatter", mode="lines+markers")
tsclust_results$tisefka_origin%>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=head(ts_clust_mds$key()),
type="scatter", mode="lines+markers")
help(plotly_data)
p <- txhousing %>%
group_by(city) %>%
plot_ly(x = ~date, y = ~sales)
p
library(plotly)
p <- txhousing %>%
group_by(city) %>%
plot_ly(x = ~date, y = ~sales)
p
# plotly objects preserve data groupings
groups(p)
plotly_data(p)
a<-tsclust_results$tisefka_origin%>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value, group=head(ts_clust_mds$key()),
type="scatter", mode="lines+markers")
plotly_data(a)
# plotly objects preserve data groupings
groups(p)
plotly_data(p)
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
tsclust_results$tisefka_origin%>% tidyr::gather("ts_name","value" ,-date)%>%
plotly::plot_ly(x=~date, y=~value,
type="scatter", mode="lines+markers")
)
plotly::plot_ly(economics,~date,~pop)
plotly::plot_ly(economics,~date,~pop,type="scatter")
plotly::plot_ly(economics,~date,~pop,type="scatter")
?plotly::plot_ly
plot_ly(economics, x = ~date, color = I("black")) %>%
add_lines(y = ~uempmed) %>%
add_lines(y = ~psavert, color = I("red"))
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(tsclust_results$tisefka_origin%>% tidyr::gather("ts_name","value" ,-date))
)
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(tsclust_results$tisefka_origin[,head(ts_clust_mds$key())]%>% tidyr::gather("ts_name","value" ,-date))
)
tsclust_results$tisefka_origin%>%dplyr::select(head(ts_clust_mds$key()))%>% tidyr::gather("ts_name","value" ,-date)
tsclust_results$tisefka_origin%>%dplyr::select(head(ts_clust_mds$key()))
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(tsclust_results$tisefka_origin%>%dplyr::select(c("date",head(ts_clust_mds$key())))%>% tidyr::gather("ts_name","value" ,-date))
)
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(head(tsclust_results$tisefka_origin%>%dplyr::select(c("date",head(ts_clust_mds$key())))%>% tidyr::gather("ts_name","value" ,-date)))
)
ts_clust_mds$groupName()
ts_clust_mds$data()
dim(ts_clust_mds$data())
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
print(dim(ts_clust_mds$data()))
)
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(dim(ts_clust_mds$data()))
)
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(ts_clust_mds$data())
)
ts_clust_mds$.updateSelection()
ts_clust_mds$groupName()
ts_clust_mds$key()
ts_clust_mds$.__enclos_env__
ts_clust_mds$selection()
ts_clust_mds$selection
ts_clust_mds$selection(cluster)
ts_clust_mds$selection("cluster")
ts_clust_mds$selection("cluster","cluster")
ts_clust_mds$selection("cluster",cluster)
ts_clust_mds$selection(cluster,"cluster")
crosstalk::bscols(widths = c(3,NA,NA),
list(
crosstalk::filter_checkbox("cluster", "Clusters", ts_clust_mds, ~cluster, inline = FALSE)
),
d3scatter::d3scatter(ts_clust_mds, ~dist_x, ~dist_y,~factor(cluster), width="100%", height=250),
DT::datatable(ts_clust_mds)
)
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
?debounce
reactive_clustering_data<- function(tsclust_results = NULL){
if(class(tsclust_results$tisefka_clust)=="PartitionalTSClusters"){
ts_clust_mds = MASS::isoMDS(tsclust_results$tisefka_clust@distmat)$points
colnames(ts_clust_mds) <- c("dist_x","dist_y")
ts_clust_mds <- data.frame(ts_clust_mds,cluster = tsclust_results$tisefka_clust@cluster,ts_names = rownames(ts_clust_mds),check.names = FALSE)
ts_clust_mds <- crosstalk::SharedData$new(ts_clust_mds)
}
return(ts_clust_mds)
}
reactive_clustering_data(tsclust_results = tsclust_results)
ts_clust_mds<-  reactive_clustering_data(tsclust_results = tsclust_results)
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
ts_clust_mds<-  clustering_tisefka_mds(tsclust_results = tsclust_results)
tsclust_results$tisefka_origin
df_mds()$ts_names
ts_clust_mds
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
bb
dim(df_mds())
dim(bb)
rm(bb)
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
dim(bb)
View(bb)
clustering_tisefka_mds
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
rm(bb)
rm(a)
rm(aa)
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
kk
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
kk
bb$selected_
bb$selected_
bb<- bb%>%dplyr::select(selected_==TRUE)
bb
bb<- df_mds()%>%dplyr::filter(selected_==TRUE)
bb<- bb%>%dplyr::select(selected_==TRUE)
bb<- bb%>%dplyr::filter(selected_==TRUE)
bb
selected_variables<-bb
selected_variables<- selected_variables$ts_names
selected_variables
selected_variables<- paste(selected_variables$ts_names)
selected_variables<-bb
selected_variables<- paste(selected_variables$ts_names)
selected_variables
aa<-tsclust_results$tisefka_origin%>%dplyr::select(c("date",selected_variables))
aa
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
my_clust_plot2
my_clust_plot%>%ggplot(mapping= aes(x = ~date,y = ~value,color=ts_names))
my_clust_plot<-my_clust_plot2
my_clust_plot%>%ggplot(mapping= aes(x = ~date,y = ~value,color=ts_names))
my_clust_plot%>%ggplot(mapping= aes(x = ~date,y = ~value,color=~ts_names))
ggplot(data = my_clust_plot,mapping= aes(x = ~date,y = ~value,color=~ts_names))
ggplot(data = my_clust_plot,mapping= aes(x = date,y = value,color=ts_names))
ggplot(data = my_clust_plot,mapping= aes(x = date,y = value,color="ts_names"))
+geom_line()
ggplot(data = my_clust_plot,mapping= aes(x = date,y = value,color="ts_names"))+geom_line()
ggplot(data = my_clust_plot,mapping= aes(x = date,y = value))+geom_line()
dim(my_clust_plot2)
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
dim(tail(tisefka,500))
library(readr)
Foreign_Exchange_Rates <- read_csv("~/Saldae_Analytics/Data/Foreign_Exchange_Rates.csv",na="ND")
View(Foreign_Exchange_Rates)
tisefka <- Foreign_Exchange_Rates
tisefka$date <- tisefka$`Time Serie`
tisefka$`Time Serie`<- NULL
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
tisefka
Saldae_cluserting_main
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
tisefka
Saldae_cluserting_main(tisefka = tisefka,num_clusters = 4)
tisefka<-tail(tisefka,500)
print("start clustering")
Saldae_cluserting_main(tisefka = tisefka,num_clusters = 4)
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
tisefka
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
num_clusters2
tisefka2
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
runApp('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
source('~/Saldae_Analytics/SaldaePackages/cross_talk_amedya.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
install.packages("slickR")
library("slickR")
p <- htmltools::tags$p(
"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
style = htmltools::css(color='red','font-style' = 'italic')
)
Saldae_intro <- htmltools::tags$p(
"This is a template of interactive reporting output generated by [Saldae Analytics Platform](https://saldae-analytics.shinyapps.io/saldae-analytics-platform/).
If you want to learn more about us and our service please visit our website:
[https://www.saldaeanalytics.com/](https://www.saldaeanalytics.com/)",
style = htmltools::css(color='black','font-style' = 'italic')
)
Saldae_intro
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
Sald_slickR
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
slickR::slickR(Sald_slickR) + settings(dots = TRUE, adaptiveHeight = TRUE)
source('~/Saldae_Analytics/SaldaePackages/SaldaeAnalyticsDashboard/R/slickR.R')
debounce
shiny::debounce
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/clustering_akk.R')
localDataset <- mtcars %>%
rownames_to_column("name") %>%
SharedData$new(key = ~name, group = 'testGroup')
library("dplyr")
localDataset <- mtcars %>%
rownames_to_column("name") %>%
SharedData$new(key = ~name, group = 'testGroup')
library(crosstalk)
localDataset <- mtcars %>%
rownames_to_column("name") %>%
SharedData$new(key = ~name, group = 'testGroup')
library(tidyverse)
localDataset <- mtcars %>%
rownames_to_column("name") %>%
SharedData$new(key = ~name, group = 'testGroup')
localDataset
localDataset$data()
mtcars %>%
rownames_to_column("name")
mtcars
rownames_to_column
?rownames_to_column
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/clustering_akk.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
?prophet:::compile_stan_model
View(prophet:::compile_stan_model)
?path.package
path.package("prophet")
library(prophet)
path.package("prophet")
detach("package:prophet", unload=TRUE)
path.package("prophet")
library(SaldaeForecasting)
library(SaldaeForecasting)
?MASS::isoMDS
library(SaldaeForecasting)
?shinyWidgets::actionBttn
library(shiny)
?observeEvent
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/SaldaeClustering.R')
library(SaldaeForecasting)
%>%plotly::partial_bundle()
plotly::partial_bundle()
?plotly::partial_bundle()
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
my_clust_plot2
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
library(SaldaeForecasting)
df_mds2
source('~/Saldae_Analytics/SaldaePackages/SaldaeForecasting/R/Clustering_UI.R')
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
?plotly::partial_bundle
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
library(SaldaeForecasting)
?prophet::make_future_dataframe
View(SaldaeDataExplorer::detect_date_auto)
View(prophet::make_future_dataframe)
library(readr)
HQ_data <- read_csv("~/Saldae_Analytics/Tisefka/HQ_data.csv")
View(HQ_data)
tisefka <- HQ_data
tisefka$DATUM
ukud_unit <- SaldaeDataExplorer::detect_date_auto(
time_vect = tisefka$DATUM,
n_new_dates = NULL
)
library(dplyr)
ukud_unit <- SaldaeDataExplorer::detect_date_auto(
time_vect = tisefka$DATUM,
n_new_dates = NULL
)
ukud_unit
# .............................. make future data frame based on forecast horizon
prphet_freq <- c("day", "week", "month", "quarter", "year", 1, 60, 3600)
names(prphet_freq) <- c("days", "weeks", "months", "quarters", "years", "seconds", "minutes", "hours")
prphet_freq
# .............................. make future data frame based on forecast horizon
prphet_freq <- c("day", "week", "month", "quarter", "year", 1, 60, 3600,1800,900)
names(prphet_freq) <- c("days", "weeks", "months", "quarters", "years", "seconds", "minutes", "hours", "1/2 hours" , "1/4 hours")
prphet_freq[ukud_unit]
library(SaldaeForecasting)
library(SaldaeForecasting)
# .............................. make future data frame based on forecast horizon
prphet_freq <- c("day", "week", "month", "quarter", "year", 1, 60, 3600,1800,900)
names(prphet_freq) <- c("days", "weeks", "months", "quarters", "years", "seconds", "minutes", "hours", "1/2 hours" , "1/4 hours")
prphet_freq
# .............................. make future data frame based on forecast horizon
prphet_freq <- c("day", "week", "month", "quarter", "year", 1, 60, 3600,1800,900)
names(prphet_freq) <- c("days", "weeks", "months", "quarters", "years", "seconds", "minutes", "hours", "1/2 hours" , "1/4 hours")
library(SaldaeForecasting)
ukud_unit<-"days"
prphet_freq <- ifelse(is.na(as.numeric(prphet_freq[ukud_unit])),prphet_freq[ukud_unit],as.numeric(prphet_freq[ukud_unit]))
prphet_freq
# .............................. make future data frame based on forecast horizon
prphet_freq <- c("day", "week", "month", "quarter", "year", 1, 60, 3600,1800,900)
names(prphet_freq) <- c("days", "weeks", "months", "quarters", "years", "seconds", "minutes", "hours", "1/2 hours" , "1/4 hours")
ukud_unit<-"1/2 hours"
prphet_freq <- ifelse(is.na(as.numeric(prphet_freq[ukud_unit])),prphet_freq[ukud_unit],as.numeric(prphet_freq[ukud_unit]))
prphet_freq
library(SaldaeForecasting)
library(SaldaeForecasting)
SaldaeAnalyticsDashboard::run_app()
library("dplyr")
SaldaeAnalyticsDashboard::run_app()
SaldaeAnalyticsDashboard::run_app()
library(SaldaeForecasting)
SaldaeAnalyticsDashboard::run_app()
library(dplyr)
SaldaeAnalyticsDashboard::run_app()
library(SaldaeForecasting)
library(SaldaeForecasting)
